// 1. Дан текст со словами. Запишите в массив все слова, начинающиеся на букву 'a'.

const text = 'арбуз, кино, холодильник, апельсин';

const arr = text.split(', ').filter(el => el[0] === 'а');

console.log(arr)

/********************************************/

// 2. Дан массив с числами. Оставьте в нем только те числа, которые делятся на 5.

// способо 1. Создание нового массива

const arr1 = [5, 7, 23, 25, 33, 40, 51];
const result = arr1.filter(el => el % 5 === 0);
console.log(result); // [5, 25, 40]


// способо 2. Без создание нового массива

const arr2 = [5, 7, 23, 25, 33, 40, 51];

for (let i = arr.length - 1; i >= 0; i--) {
    if (arr2[i] % 5 !== 0) {
        arr2.splice(i, 1); // Удаляем элемент, если он не делится на 5
    }
}

console.log(arr2); // [5, 25, 40]

// Итерация в обратном порядке (убывание i) используется здесь, чтобы избежать проблем, связанных с изменением длины массива при использовании метода splice.

// Когда вы удаляете элемент из массива с помощью splice, все элементы, которые следуют за удалённым, сдвигаются на один индекс назад. Если вы идёте по массиву в прямом порядке, то при удалении одного элемента следующий элемент "перепрыгивается", потому что итератор (i) уже увеличился, а массив стал короче.

/********************************************/

// 3. Дан массив с числами. Оставьте в нем только те числа, которые содержат цифру ноль.

// способ 1. C созданием нового массива

const arr3 = [100, 1595, 20, 55, 701]

const res = arr3.filter(el => String(el).includes(0))

console.log(res3)

// способ 2. Без создания массива

const arr4 = [100, 1595, 20, 55, 701]

for (let i = arr4.length - 1; i >= 0; i--){

    if(!String(arr4[i]).includes('0')){
        arr4.splice(i, 1)
    }
}

console.log(arr3)

/********************************************/

// 4. Дан массив со числами. Проверьте, что в нем есть число, содержащее в себе цифру 3.

// способ 1

const arr5 = [2, 23, 4, 567]

console.log(arr5.some(num => String(num).includes('3')))

// Метод some() в JavaScript проверяет, удовлетворяет ли хотя бы один элемент массива указанному условию. Если хотя бы один элемент возвращает true для заданной проверки, метод останавливается и возвращает true. Если ни один элемент не удовлетворяет условию, возвращается false.

// способ 2

const arr6 = [2, 3, 4, 567]

let hasNumber = false;

for (const num of arr6){
    if (String(num).includes('3')){
        hasNumber = true
        break
    }
}

console.log(hasNumber)

/********************************************/

// 5. Дано некоторое число:

// 35142
// Отсортируйте цифры этого числа. В нашем случае должно получится следующее:

// 12345

const num = 35142

const temp = Number(String(num).split('').sort().join(''))

console.log(temp)

/********************************************/

// 6. Напишите программу, которая сформирует следующую строку:

// '-1-2-3-4-5-'

const n = 5;
let result1 = '-';

for (let i = 1; i <= n; i++) {
    result1 += i + '-';
}

console.log(result1); // '-1-2-3-4-5-'

/********************************************/

// 7. Найдите сумму элементов этого объекта.

const obj = {
    1: {
        1: {
            1: 111,
            2: 112,
            3: 113,
        },
        2: {
            1: 121,
            2: 122,
            3: 123,
        },
    },
    2: {
        1: {
            1: 211,
            2: 212,
            3: 213,
        },
        2: {
            1: 221,
            2: 222,
            3: 223,
        },
    },
    3: {
        1: {
            1: 311,
            2: 312,
            3: 313,
        },
        2: {
            1: 321,
            2: 322,
            3: 323,
        },
    },
};

// Функция для подсчета суммы
function sumElements(obj) {
    let sum = 0;
    for (const key in obj) {
        if (typeof obj[key] === 'object') {
            // Если элемент - объект, рекурсивно обходим его
            sum += sumElements(obj[key]);
        } else {
            // Если элемент - число, добавляем к сумме
            sum += obj[key];
        }
    }
    return sum;
}

const totalSum = sumElements(obj);

console.log(totalSum); // 3726
